# [K] (c)@2020

name: Test

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/test-2.yml'

jobs:

  build:

    runs-on: ubuntu-latest
    if: github.repository == 'kongfl888/OpenWrt4R2S'

    steps:

      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo apt-get update
          sudo apt-get -y --no-install-recommends install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          curl https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh  | sed '/#/d' | sed 's/\\//g' | sed 's/exit 0//g' | sed 's/sudo apt -y install//g' | sed 's/sudo apt-get -y install//g' | sed 's/:i386//g' | xargs sudo apt-get -y --no-install-recommends install
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /usr/local/share/boost /opt/ghc
          git config --global user.name "kongfl888 K"
          git config --global user.email "kongfl888@outlook.com"

      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

      - name: Init Source
        run: |
          mkdir friendlywrt-rk3328
          cd friendlywrt-rk3328
          repo init -u https://github.com/kongfl888/friendlywrt_manifests -b lede -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle --depth=1
          repo sync -c --no-tags --no-clone-bundle -j8

      - name: Patch Kernel
        run: |
          . patch_kernel_5.4.sh

      - name: Mods
        run: |
          cd friendlywrt-rk3328
          . ../remove_unused_config.sh
          . ../patch_dosth.sh
          cat configs/config_rk3328 | grep "TARGET" >> ../base_rk3328.conf
          cat ../base_rk3328.conf > configs/config_rk3328
          #sed -i '/ddns/d' configs/config_rk3328 && echo ""
          cat ../JUNK/r2s_lean2_user_part1.conf >> configs/config_rk3328
          sed -i -r '/^CONFIG_PACKAGE/d' configs/config_rk3328
          echo 'CONFIG_PACKAGE_dns2socks=y' >> configs/config_rk3328

      - name: Add Packages
        run: |
          git clone -b master https://github.com/kongfl888/openwrt-dns2socks.git friendlywrt-rk3328/friendlywrt/package/lean/op-dns2socks
          rm -rf friendlywrt-rk3328/friendlywrt/package/lean/dns2socks
          sed -i 's/37ed1b4a67587b2e94fdbe6b492e72c3edc2c7e1/HEAD/g' friendlywrt-rk3328/friendlywrt/package/lean/op-dns2socks/Makefile
      - name: Update Feeds
        run: |
          cd friendlywrt-rk3328/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Build FriendlyWrt
        run: |
          cd friendlywrt-rk3328
          . ../scripts/rename_sdimg.sh 22 || echo ""
          sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          ./build.sh nanopi_r2s.mk

      - name: Zip Files
        run: |
          gzip friendlywrt-rk3328/out/*.img
      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./r2srom/
          mkdir -p ./r2srom/
          mkdir -p ./r2sconfig/
          mkdir -p ./imgs/
          mv friendlywrt-rk3328/out/*img* ./r2srom/
          cd ./r2srom/
          sha256sum *img* > sha256sum.txt
          cd ..
          mkdir -p ./ipks/
          . ./scripts/copyipk.sh
          cd ./ipks/
          sha256sum *ipk > packages.sha256
          cd ..
          cp ./README.txt ./r2srom/
          cp ./scripts/checksha256.sh ./r2srom/
          . ./scripts/copyimg.sh
          . ./scripts/copyconfig.sh
          . ./scripts/ls-dir.sh friendlywrt-rk3328 > ./r2sconfig/workdir.txt
          zip -r artifact.zip ./r2srom/
          zip -r ipks.zip ./ipks/
          zip -r imgs.zip ./imgs/
          zip -r r2sconfig.zip ./r2sconfig/
          release_tag="test2-$(date +%Y-%m-%d-%H)"
          echo "##[set-output name=release_tag;]$release_tag"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM.zip
          asset_content_type: application/zip
      - name: Upload Release Asset Ipk
        id: upload-release-asset-ipk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./ipks.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ipk.zip
          asset_content_type: application/zip
      - name: Upload Release Asset Config
        id: upload-release-asset-config
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./r2sconfig.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-config.zip
          asset_content_type: application/zip
      - name: Upload Release Asset Img
        id: upload-release-asset-img
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./imgs.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-imgs.zip
          asset_content_type: application/zip
# end
